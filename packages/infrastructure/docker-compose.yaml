services:
  zookeeper-test:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "${ZOOKEEPER_CLIENT_PORT}:${ZOOKEEPER_CLIENT_PORT}"
    hostname: zookeeper-test
    healthcheck:
      test: echo ruok | nc 127.0.0.1 ${ZOOKEEPER_CLIENT_PORT} || exit -1
      interval: 5s
      timeout: 5s
      retries: 6

  kafka-test:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-test
    ports:
      - "${KAFKA_CLIENT_PORT}:${KAFKA_CLIENT_PORT}"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-test:${ZOOKEEPER_CLIENT_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-test:${KAFKA_INTERNAL_DOCKER_PORT},PLAINTEXT_HOST://${KAFKA_CLIENT_HOST}:${KAFKA_CLIENT_PORT}
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
    healthcheck:
      test: kafka-topics --bootstrap-server kafka-test:${KAFKA_INTERNAL_DOCKER_PORT} --list
      interval: 5s
      timeout: 5s
      retries: 6

  schema-registry-test:
    image: confluentinc/cp-schema-registry:latest
    depends_on:
      - kafka-test
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-test:${KAFKA_INTERNAL_DOCKER_PORT}
      SCHEMA_REGISTRY_HOST_NAME: schema-registry-test
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:${SCHEMA_REGISTRY_CLIENT_PORT}
    ports:
      - "${SCHEMA_REGISTRY_CLIENT_PORT}:${SCHEMA_REGISTRY_CLIENT_PORT}"
    hostname: schema-registry-test
    healthcheck:
      test: curl --output /dev/null --silent --head --fail http://schema-registry-test:${SCHEMA_REGISTRY_CLIENT_PORT}/subjects
      interval: 5s
      timeout: 5s
      retries: 6
